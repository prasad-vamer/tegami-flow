services:
  gui:
    build:
      context: ./tegami-flow-gui
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    volumes:
      - ./tegami-flow-gui:/app
    # Use Pooling if Windows files systme shows any Hot Reloading isues.
    # Uncomment the below 2 environment variables if HOT Reloading(HR) is Not working.
    # environment:
    #   - CHOKIDAR_USEPOLLING=true
    #   - CHOKIDAR_INTERVAL=1000
    working_dir: /app
    stdin_open: true
    tty: true
  app:
    build:
      context: ./tegami-flow-core
      dockerfile: Dockerfile.dev
    volumes:
      - ./tegami-flow-core:/app
    working_dir: /app
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/myapp_development
    ports:
      - "5555:5555"
      - "3000:3000"
    command: sh -c "npm run watch:ts & npm run dev"
    depends_on:
      - db
  db:
    build:
      context: ./tegami-flow-core
      dockerfile: Dockerfile.postgres
    environment:
      POSTGRES_DB: myapp_development
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      TZ: "Asia/Tokyo"
      LANG: en_US.UTF-8
      LC_MESSAGES: en_US.UTF-8
      LC_COLLATE: ja_JP.UTF-8
      LC_CTYPE: ja_JP.UTF-8
    restart: always
    volumes:
      - ./tegami-flow-core/volumes/postgres/db/data:/var/lib/postgresql/data
      - ./tegami-flow-core/volumes/postgres/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d myapp_development" ]
      interval: 30s
      timeout: 5s
      retries: 6
      start_period: 30s
  adminer:
    image: adminer
    container_name: adminer
    restart: unless-stopped
    environment:
      ADMINER_DESIGN: hydra # Dark theme
      # ADMINER_DESIGN: dracula  # Dark theme
      # ADMINER_DESIGN: mancave  # Dark theme
    depends_on:
      - db
    ports:
      - "8081:8080"
